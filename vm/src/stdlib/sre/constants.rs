/*
 * Secret Labs' Regular Expression Engine
 *
 * regular expression matching engine
 *
 * NOTE: This file is generated by sre_constants.py.  If you need
 * to change anything in here, edit sre_constants.py and run it.
 *
 * Copyright (c) 1997-2001 by Secret Labs AB.  All rights reserved.
 *
 * See the _sre.c file for information on usage and redistribution.
 */

pub const SRE_MAGIC: usize = 20140917;
pub const SRE_OP_FAILURE: usize = 0;
pub const SRE_OP_SUCCESS: usize = 1;
pub const SRE_OP_ANY: usize = 2;
pub const SRE_OP_ANY_ALL: usize = 3;
pub const SRE_OP_ASSERT: usize = 4;
pub const SRE_OP_ASSERT_NOT: usize = 5;
pub const SRE_OP_AT: usize = 6;
pub const SRE_OP_BRANCH: usize = 7;
pub const SRE_OP_CALL: usize = 8;
pub const SRE_OP_CATEGORY: usize = 9;
pub const SRE_OP_CHARSET: usize = 10;
pub const SRE_OP_BIGCHARSET: usize = 11;
pub const SRE_OP_GROUPREF: usize = 12;
pub const SRE_OP_GROUPREF_EXISTS: usize = 13;
pub const SRE_OP_GROUPREF_IGNORE: usize = 14;
pub const SRE_OP_IN: usize = 15;
pub const SRE_OP_IN_IGNORE: usize = 16;
pub const SRE_OP_INFO: usize = 17;
pub const SRE_OP_JUMP: usize = 18;
pub const SRE_OP_LITERAL: usize = 19;
pub const SRE_OP_LITERAL_IGNORE: usize = 20;
pub const SRE_OP_MARK: usize = 21;
pub const SRE_OP_MAX_UNTIL: usize = 22;
pub const SRE_OP_MIN_UNTIL: usize = 23;
pub const SRE_OP_NOT_LITERAL: usize = 24;
pub const SRE_OP_NOT_LITERAL_IGNORE: usize = 25;
pub const SRE_OP_NEGATE: usize = 26;
pub const SRE_OP_RANGE: usize = 27;
pub const SRE_OP_REPEAT: usize = 28;
pub const SRE_OP_REPEAT_ONE: usize = 29;
pub const SRE_OP_SUBPATTERN: usize = 30;
pub const SRE_OP_MIN_REPEAT_ONE: usize = 31;
pub const SRE_OP_RANGE_IGNORE: usize = 32;
pub const SRE_AT_BEGINNING: usize = 0;
pub const SRE_AT_BEGINNING_LINE: usize = 1;
pub const SRE_AT_BEGINNING_STRING: usize = 2;
pub const SRE_AT_BOUNDARY: usize = 3;
pub const SRE_AT_NON_BOUNDARY: usize = 4;
pub const SRE_AT_END: usize = 5;
pub const SRE_AT_END_LINE: usize = 6;
pub const SRE_AT_END_STRING: usize = 7;
pub const SRE_AT_LOC_BOUNDARY: usize = 8;
pub const SRE_AT_LOC_NON_BOUNDARY: usize = 9;
pub const SRE_AT_UNI_BOUNDARY: usize = 10;
pub const SRE_AT_UNI_NON_BOUNDARY: usize = 11;
pub const SRE_CATEGORY_DIGIT: usize = 0;
pub const SRE_CATEGORY_NOT_DIGIT: usize = 1;
pub const SRE_CATEGORY_SPACE: usize = 2;
pub const SRE_CATEGORY_NOT_SPACE: usize = 3;
pub const SRE_CATEGORY_WORD: usize = 4;
pub const SRE_CATEGORY_NOT_WORD: usize = 5;
pub const SRE_CATEGORY_LINEBREAK: usize = 6;
pub const SRE_CATEGORY_NOT_LINEBREAK: usize = 7;
pub const SRE_CATEGORY_LOC_WORD: usize = 8;
pub const SRE_CATEGORY_LOC_NOT_WORD: usize = 9;
pub const SRE_CATEGORY_UNI_DIGIT: usize = 10;
pub const SRE_CATEGORY_UNI_NOT_DIGIT: usize = 11;
pub const SRE_CATEGORY_UNI_SPACE: usize = 12;
pub const SRE_CATEGORY_UNI_NOT_SPACE: usize = 13;
pub const SRE_CATEGORY_UNI_WORD: usize = 14;
pub const SRE_CATEGORY_UNI_NOT_WORD: usize = 15;
pub const SRE_CATEGORY_UNI_LINEBREAK: usize = 16;
pub const SRE_CATEGORY_UNI_NOT_LINEBREAK: usize = 17;
pub const SRE_FLAG_TEMPLATE: usize = 1;
pub const SRE_FLAG_IGNORECASE: usize = 2;
pub const SRE_FLAG_LOCALE: usize = 4;
pub const SRE_FLAG_MULTILINE: usize = 8;
pub const SRE_FLAG_DOTALL: usize = 16;
pub const SRE_FLAG_UNICODE: usize = 32;
pub const SRE_FLAG_VERBOSE: usize = 64;
pub const SRE_FLAG_DEBUG: usize = 128;
pub const SRE_FLAG_ASCII: usize = 256;
pub const SRE_INFO_PREFIX: usize = 1;
pub const SRE_INFO_LITERAL: usize = 2;
pub const SRE_INFO_CHARSET: usize = 4;
